(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{195:function(e,t,a){"use strict";a.r(t);var o=a(3),r=function(e){e.options.__data__block__={mermaid_1a962850:"sequenceDiagram\n客户端 -> 服务端: 开启 socket 连接\n服务端 --\x3e 客户端: ok，新的客户端\nNote right of 服务端: 连接建立成功\n客户端 -> 服务端: 发送 Hello 请求\n服务端 --\x3e 客户端: Hello 返回\nNote left of 客户端: 获取到了服务相关信息\n",mermaid_382ee16c:"sequenceDiagram\n客户端 -> 服务端: 发送 DataRequest 请求\nNote right of 服务端: 新的请求来啦，<br/> 我将进行处理\n服务端 --\x3e 客户端: 返回 DataResponse\nNote left of 客户端: 我拿到了 DataResponse 了\nNote left of 客户端: 我将解析 DataResponse 成 ResultSet\n",mermaid_382ee188:"sequenceDiagram\n客户端 -> 服务端: 发送Insert请求到服务端 (也称之 PreparedStatement)\nNote right of 服务端: 新的PreparedStatement请求来了,<br/>我将看看对应的表的元数据信息\n服务端 --\x3e 客户端: 返回 DataResponse (空的 Block, <br/> 也称之 sampleBlock)\nNote right of 服务端: State: 等待插入。\nNote left of 客户端: 拿到 sampleBlock 了, <br/> 我知道了这个表的元数据（字段名称，类型等）\nNote left of 客户端: 写入数据到内存的 block中 <br/> (当我们在 JDBC 调用 `setObject` 的时候)\n客户端 -> 服务端: 将 block 包装成 dataRequest 发送\nNote right of 服务端: 新的 block 来了,  <br/> 我将插入到表中\n客户端 -> 服务端: 发送一个空的 block 结束 插入\nNote right of 服务端: 空的 block 来了,  <br/> 请求结束\nNote right of 服务端: State: 空闲\n"}},s=Object(o.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"clickhouse-客户端-服务端原生通信协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#clickhouse-客户端-服务端原生通信协议"}},[e._v("#")]),e._v(" ClickHouse 客户端-服务端原生通信协议")]),e._v(" "),a("h2",{attrs:{id:"建立连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#建立连接"}},[e._v("#")]),e._v(" 建立连接")]),e._v(" "),a("Mermaid",{attrs:{id:"mermaid_1a962850",graph:e.$dataBlock.mermaid_1a962850}}),a("h2",{attrs:{id:"发请请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#发请请求"}},[e._v("#")]),e._v(" 发请请求")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("请求有非常多种不同的 requests/response, 上述 "),a("code",[e._v("hello")]),e._v(" 为其中一种。")])]),e._v(" "),a("li",[a("p",[e._v("可以在 "),a("code",[e._v("com.github.housepower.jdbc.protocol")]),e._v(" 包下面找到所有的 requests/response 类型。")])])]),e._v(" "),a("h2",{attrs:{id:"查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查询"}},[e._v("#")]),e._v(" 查询")]),e._v(" "),a("p",[e._v("当连接建立并且经过 hello请求返回后，我们可以发送一个字符串SQL来查询数据。")]),e._v(" "),a("Mermaid",{attrs:{id:"mermaid_382ee16c",graph:e.$dataBlock.mermaid_382ee16c}}),a("h2",{attrs:{id:"插入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#插入"}},[e._v("#")]),e._v(" 插入")]),e._v(" "),a("p",[e._v("一些小的查询请求，可以以字符串SQL的方式和服务端交互，但这不利于批量数据的插入。ClickHouse 提供了另外原生的批量导入协议支持，这样我们可以直接往ClickHouse发送block数据。")]),e._v(" "),a("Mermaid",{attrs:{id:"mermaid_382ee188",graph:e.$dataBlock.mermaid_382ee188}})],1)}),[],!1,null,null,null);"function"==typeof r&&r(s);t.default=s.exports}}]);